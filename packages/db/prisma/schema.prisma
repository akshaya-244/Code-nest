// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url = env("DATABASE_URL")
}

model User{
  id String @id @default(cuid())
  email String @unique
  name String? 
  password String
  createdAt DateTime @default(now())
  submissions Submissions[]

}
enum SubmissionResult {
  AC
  REJECTED
  PENDING
}
model Submissions{
  // id String @id  @default(cuid())
  token String @db.VarChar @unique
  problemId String
  userId String
  code String
  status String?
  user User? @relation(fields: [userId], references: [id])
  problem Problem @relation(fields: [problemId], references: [id])
  
}

model Problem{
  id String @id @default(cuid())
  title String
  hidden Boolean @default(true)
  slug String @unique
  description String
  solved Int @default(0)
  createdAt DateTime @default(now())
  submissions Submissions[]
  DefaultCode DefaultCode[]

}

model Language{
  id Int @id @default(autoincrement())
  name String 
  judge0Id Int @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  DefaultCode DefaultCode[]

}

model DefaultCode {
  id         String   @id @default(cuid())
  code       String
  languageId Int
  createdAt  DateTime @default(now())
  problemId String
  problem    Problem @relation(fields: [problemId], references: [id])
  language   Language @relation(fields: [languageId], references: [id])
   @@unique([problemId, languageId])

}
model languages {
  id          Int      @id @default(autoincrement())
  name        String?  @db.VarChar
  compile_cmd String?  @db.VarChar
  run_cmd     String?  @db.VarChar
  source_file String?  @db.VarChar
  is_archived Boolean? @default(false)
}

model TestCases{
  token String @id @db.VarChar @unique
  source_code                                String?
  language_id                                Int?
  stdin                                      String?
  expected_output                            String?
  stdout                                     String?
  status_id                                  Int?
  created_at                                 DateTime?   @db.Timestamp(6)
  finished_at                                DateTime?   @db.Timestamp(6)
  time                                       Decimal?    @db.Decimal
  memory                                     Int?
  stderr                                     String?
  // token                                      String?     @db.VarChar @unique
  number_of_runs                             Int?
  cpu_time_limit                             Decimal?    @db.Decimal
  cpu_extra_time                             Decimal?    @db.Decimal
  wall_time_limit                            Decimal?    @db.Decimal
  memory_limit                               Int?
  stack_limit                                Int?
  max_processes_and_or_threads               Int?
  enable_per_process_and_thread_time_limit   Boolean?
  enable_per_process_and_thread_memory_limit Boolean?
  max_file_size                              Int?
  compile_output                             String?
  exit_code                                  Int?
  exit_signal                                Int?
  message                                    String?
  wall_time                                  Decimal?    @db.Decimal
  compiler_options                           String?     @db.VarChar
  command_line_arguments                     String?     @db.VarChar
  redirect_stderr_to_stdout                  Boolean?
  callback_url                               String?     @db.VarChar
  additional_files                           Bytes?
  enable_network                             Boolean?
  submissionId                               String?
}

enum AuthType {
  Google
  Github
}